/*
 * Castle API
 * ## Introduction  **Just getting started? Check out our [quick start guide](https://docs.castle.io/docs/quickstart)**  Castle APIs uses standard HTTP response codes, authentication and verbs. JSON is used as data exchange format, both for parsing incoming request bodies, and in the returned response. This means that the `Content-Type` header should to be set to `application/json` in requests with a body, such as `POST` or `PUT`.  All API requests must be made over [HTTPS](http://en.wikipedia.org/wiki/HTTP_Secure). Non-HTTPS calls will fail and the **TLS version needs to be 1.1 or higher**.  ## Supported types  For a list of supported types, see our [Types Reference](https://docs.castle.io/docs/events).  ## Rate limits  Our APIs implement rate-limiting based on the number of requests made to them. Each request will return the following headers:  - `X-RateLimit-Limit` - The maximum number of requests you're permitted to make in the current time window. - `X-RateLimit-Remaining` - The number of requests remaining in the current time window. - `X-RateLimit-Reset` - The remaining time in seconds until the current time window resets.  Additionally, Our Risk, Filter (and the legacy Authenticate) APIs have a per-user-id rate limit of 6 requests per second and 10 requests per 5 seconds. 
 *
 * OpenAPI spec version: 1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.castle.client.model.generated;

import java.util.Objects;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;

/**
 * ListItemsBatchResponse
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2025-01-20T18:58:06.855017776Z[GMT]")

public class ListItemsBatchResponse {
  @SerializedName("total_received")
  private Integer totalReceived = null;

  @SerializedName("total_processed")
  private Integer totalProcessed = null;

  @SerializedName("created")
  private Integer created = null;

  @SerializedName("updated")
  private Integer updated = null;

  @SerializedName("replaced")
  private Integer replaced = null;

  @SerializedName("errored")
  private Integer errored = null;

  public ListItemsBatchResponse totalReceived(Integer totalReceived) {
    this.totalReceived = totalReceived;
    return this;
  }

   /**
   * Total number of items received
   * @return totalReceived
  **/
  @ApiModelProperty(required = true, value = "Total number of items received")
  public Integer getTotalReceived() {
    return totalReceived;
  }

  public void setTotalReceived(Integer totalReceived) {
    this.totalReceived = totalReceived;
  }

  public ListItemsBatchResponse totalProcessed(Integer totalProcessed) {
    this.totalProcessed = totalProcessed;
    return this;
  }

   /**
   * Total number of items processed without any errors
   * @return totalProcessed
  **/
  @ApiModelProperty(required = true, value = "Total number of items processed without any errors")
  public Integer getTotalProcessed() {
    return totalProcessed;
  }

  public void setTotalProcessed(Integer totalProcessed) {
    this.totalProcessed = totalProcessed;
  }

  public ListItemsBatchResponse created(Integer created) {
    this.created = created;
    return this;
  }

   /**
   * Number of items created
   * @return created
  **/
  @ApiModelProperty(value = "Number of items created")
  public Integer getCreated() {
    return created;
  }

  public void setCreated(Integer created) {
    this.created = created;
  }

  public ListItemsBatchResponse updated(Integer updated) {
    this.updated = updated;
    return this;
  }

   /**
   * Number of items updated
   * @return updated
  **/
  @ApiModelProperty(value = "Number of items updated")
  public Integer getUpdated() {
    return updated;
  }

  public void setUpdated(Integer updated) {
    this.updated = updated;
  }

  public ListItemsBatchResponse replaced(Integer replaced) {
    this.replaced = replaced;
    return this;
  }

   /**
   * Total number of items replaced
   * @return replaced
  **/
  @ApiModelProperty(value = "Total number of items replaced")
  public Integer getReplaced() {
    return replaced;
  }

  public void setReplaced(Integer replaced) {
    this.replaced = replaced;
  }

  public ListItemsBatchResponse errored(Integer errored) {
    this.errored = errored;
    return this;
  }

   /**
   * Total number of items that errored
   * @return errored
  **/
  @ApiModelProperty(value = "Total number of items that errored")
  public Integer getErrored() {
    return errored;
  }

  public void setErrored(Integer errored) {
    this.errored = errored;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ListItemsBatchResponse listItemsBatchResponse = (ListItemsBatchResponse) o;
    return Objects.equals(this.totalReceived, listItemsBatchResponse.totalReceived) &&
        Objects.equals(this.totalProcessed, listItemsBatchResponse.totalProcessed) &&
        Objects.equals(this.created, listItemsBatchResponse.created) &&
        Objects.equals(this.updated, listItemsBatchResponse.updated) &&
        Objects.equals(this.replaced, listItemsBatchResponse.replaced) &&
        Objects.equals(this.errored, listItemsBatchResponse.errored);
  }

  @Override
  public int hashCode() {
    return Objects.hash(totalReceived, totalProcessed, created, updated, replaced, errored);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ListItemsBatchResponse {\n");
    
    sb.append("    totalReceived: ").append(toIndentedString(totalReceived)).append("\n");
    sb.append("    totalProcessed: ").append(toIndentedString(totalProcessed)).append("\n");
    sb.append("    created: ").append(toIndentedString(created)).append("\n");
    sb.append("    updated: ").append(toIndentedString(updated)).append("\n");
    sb.append("    replaced: ").append(toIndentedString(replaced)).append("\n");
    sb.append("    errored: ").append(toIndentedString(errored)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

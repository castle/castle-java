/*
 * Castle API
 * ## Introduction  **Just getting started? Check out our [quick start guide](https://docs.castle.io/docs/quickstart)**  Castle APIs uses standard HTTP response codes, authentication and verbs. JSON is used as data exchange format, both for parsing incoming request bodies, and in the returned response. This means that the `Content-Type` header should to be set to `application/json` in requests with a body, such as `POST` or `PUT`.  All API requests must be made over [HTTPS](http://en.wikipedia.org/wiki/HTTP_Secure). Non-HTTPS calls will fail and the **TLS version needs to be 1.1 or higher**.  ## Supported types  For a list of supported types, see our [Types Reference](https://docs.castle.io/docs/events).  ## Rate limits  Our APIs implement rate-limiting based on the number of requests made to them. Each request will return the following headers:  - `X-RateLimit-Limit` - The maximum number of requests you're permitted to make in the current time window. - `X-RateLimit-Remaining` - The number of requests remaining in the current time window. - `X-RateLimit-Reset` - The remaining time in seconds until the current time window resets.  Additionally, Our Risk, Filter (and the legacy Authenticate) APIs have a per-user-id rate limit of 6 requests per second and 10 requests per 5 seconds. 
 *
 * OpenAPI spec version: 1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.castle.client.model.generated;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;
import org.threeten.bp.OffsetDateTime;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;
/**
 * FilterAndRiskReponseEmailDomainDetails
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2025-01-20T18:58:06.855017776Z[GMT]")

public class FilterAndRiskResponseEmailDomainDetails {
  @SerializedName("created_at")
  private OffsetDateTime createdAt = null;

  @SerializedName("updated_at")
  private OffsetDateTime updatedAt = null;

  @SerializedName("expires_at")
  private OffsetDateTime expiresAt = null;

  @SerializedName("registrar")
  private String registrar = null;

  @SerializedName("nameservers")
  private List<String> nameservers = null;

  @SerializedName("spf_record")
  private FilterAndRiskResponseEmailDomainDetailsSpfRecord spfRecord = null;

  @SerializedName("dmarc_record")
  private FilterAndRiskResponseEmailDomainDetailsSpfRecord dmarcRecord = null;

  @SerializedName("mx_records")
  private FilterAndRiskResponseEmailDomainDetailsMxRecords mxRecords = null;

  public FilterAndRiskResponseEmailDomainDetails createdAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
    return this;
  }

   /**
   * Get createdAt
   * @return createdAt
  **/
  @ApiModelProperty(example = "2021-09-27T16:46:38.313Z", value = "")
  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
  }

  public FilterAndRiskResponseEmailDomainDetails updatedAt(OffsetDateTime updatedAt) {
    this.updatedAt = updatedAt;
    return this;
  }

   /**
   * Get updatedAt
   * @return updatedAt
  **/
  @ApiModelProperty(example = "2021-09-27T16:46:38.313Z", value = "")
  public OffsetDateTime getUpdatedAt() {
    return updatedAt;
  }

  public void setUpdatedAt(OffsetDateTime updatedAt) {
    this.updatedAt = updatedAt;
  }

  public FilterAndRiskResponseEmailDomainDetails expiresAt(OffsetDateTime expiresAt) {
    this.expiresAt = expiresAt;
    return this;
  }

   /**
   * Get expiresAt
   * @return expiresAt
  **/
  @ApiModelProperty(example = "2021-09-27T16:46:38.313Z", value = "")
  public OffsetDateTime getExpiresAt() {
    return expiresAt;
  }

  public void setExpiresAt(OffsetDateTime expiresAt) {
    this.expiresAt = expiresAt;
  }

  public FilterAndRiskResponseEmailDomainDetails registrar(String registrar) {
    this.registrar = registrar;
    return this;
  }

   /**
   * Get registrar
   * @return registrar
  **/
  @ApiModelProperty(value = "")
  public String getRegistrar() {
    return registrar;
  }

  public void setRegistrar(String registrar) {
    this.registrar = registrar;
  }

  public FilterAndRiskResponseEmailDomainDetails nameservers(List<String> nameservers) {
    this.nameservers = nameservers;
    return this;
  }

  public FilterAndRiskResponseEmailDomainDetails addNameserversItem(String nameserversItem) {
    if (this.nameservers == null) {
      this.nameservers = new ArrayList<String>();
    }
    this.nameservers.add(nameserversItem);
    return this;
  }

   /**
   * Get nameservers
   * @return nameservers
  **/
  @ApiModelProperty(example = "[\"ns1.hosting.com\",\"ns2.hosting.com\",\"ns3.hosting.com\"]", value = "")
  public List<String> getNameservers() {
    return nameservers;
  }

  public void setNameservers(List<String> nameservers) {
    this.nameservers = nameservers;
  }

  public FilterAndRiskResponseEmailDomainDetails spfRecord(FilterAndRiskResponseEmailDomainDetailsSpfRecord spfRecord) {
    this.spfRecord = spfRecord;
    return this;
  }

   /**
   * Get spfRecord
   * @return spfRecord
  **/
  @ApiModelProperty(value = "")
  public FilterAndRiskResponseEmailDomainDetailsSpfRecord getSpfRecord() {
    return spfRecord;
  }

  public void setSpfRecord(FilterAndRiskResponseEmailDomainDetailsSpfRecord spfRecord) {
    this.spfRecord = spfRecord;
  }

  public FilterAndRiskResponseEmailDomainDetails dmarcRecord(FilterAndRiskResponseEmailDomainDetailsSpfRecord dmarcRecord) {
    this.dmarcRecord = dmarcRecord;
    return this;
  }

   /**
   * Get dmarcRecord
   * @return dmarcRecord
  **/
  @ApiModelProperty(value = "")
  public FilterAndRiskResponseEmailDomainDetailsSpfRecord getDmarcRecord() {
    return dmarcRecord;
  }

  public void setDmarcRecord(FilterAndRiskResponseEmailDomainDetailsSpfRecord dmarcRecord) {
    this.dmarcRecord = dmarcRecord;
  }

  public FilterAndRiskResponseEmailDomainDetails mxRecords(FilterAndRiskResponseEmailDomainDetailsMxRecords mxRecords) {
    this.mxRecords = mxRecords;
    return this;
  }

   /**
   * Get mxRecords
   * @return mxRecords
  **/
  @ApiModelProperty(value = "")
  public FilterAndRiskResponseEmailDomainDetailsMxRecords getMxRecords() {
    return mxRecords;
  }

  public void setMxRecords(FilterAndRiskResponseEmailDomainDetailsMxRecords mxRecords) {
    this.mxRecords = mxRecords;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FilterAndRiskResponseEmailDomainDetails emailDomainDetails = (FilterAndRiskResponseEmailDomainDetails) o;
    return Objects.equals(this.createdAt, emailDomainDetails.createdAt) &&
        Objects.equals(this.updatedAt, emailDomainDetails.updatedAt) &&
        Objects.equals(this.expiresAt, emailDomainDetails.expiresAt) &&
        Objects.equals(this.registrar, emailDomainDetails.registrar) &&
        Objects.equals(this.nameservers, emailDomainDetails.nameservers) &&
        Objects.equals(this.spfRecord, emailDomainDetails.spfRecord) &&
        Objects.equals(this.dmarcRecord, emailDomainDetails.dmarcRecord) &&
        Objects.equals(this.mxRecords, emailDomainDetails.mxRecords);
  }

  @Override
  public int hashCode() {
    return Objects.hash(createdAt, updatedAt, expiresAt, registrar, nameservers, spfRecord, dmarcRecord, mxRecords);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FilterAndRiskResponseEmailDomainDetails {\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
    sb.append("    expiresAt: ").append(toIndentedString(expiresAt)).append("\n");
    sb.append("    registrar: ").append(toIndentedString(registrar)).append("\n");
    sb.append("    nameservers: ").append(toIndentedString(nameservers)).append("\n");
    sb.append("    spfRecord: ").append(toIndentedString(spfRecord)).append("\n");
    sb.append("    dmarcRecord: ").append(toIndentedString(dmarcRecord)).append("\n");
    sb.append("    mxRecords: ").append(toIndentedString(mxRecords)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

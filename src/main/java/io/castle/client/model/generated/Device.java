/*
 * Castle API
 * ## Introduction  **Just getting started? Check out our [quick start guide](https://docs.castle.io/docs/quickstart)**  Castle APIs uses standard HTTP response codes, authentication and verbs. JSON is used as data exchange format, both for parsing incoming request bodies, and in the returned response. This means that the `Content-Type` header should to be set to `application/json` in requests with a body, such as `POST` or `PUT`.  All API requests must be made over [HTTPS](http://en.wikipedia.org/wiki/HTTP_Secure). Non-HTTPS calls will fail and the **TLS version needs to be 1.1 or higher**.  ## Supported types  For a list of supported types, see our [Types Reference](https://docs.castle.io/docs/events).   ## Rate limits  Our Risk, Log (and the legacy Authenticate) APIs have a per-user-id rate limit of 6 requests per second and 10 requests per 5 seconds. 
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.castle.client.model.generated;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;
import org.threeten.bp.OffsetDateTime;

import java.util.Objects;

/**
 * Device
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-09-05T12:03:37.030848+02:00[Europe/Stockholm]")
public class Device {
  public static final String SERIALIZED_NAME_TOKEN = "token";
  @SerializedName(SERIALIZED_NAME_TOKEN)
  private String token;

  public static final String SERIALIZED_NAME_USER_ID = "user_id";
  @SerializedName(SERIALIZED_NAME_USER_ID)
  private String userId;

  public static final String SERIALIZED_NAME_CREATED_AT = "created_at";
  @SerializedName(SERIALIZED_NAME_CREATED_AT)
  private OffsetDateTime createdAt;

  public static final String SERIALIZED_NAME_LAST_SEEN_AT = "last_seen_at";
  @SerializedName(SERIALIZED_NAME_LAST_SEEN_AT)
  private OffsetDateTime lastSeenAt;

  public static final String SERIALIZED_NAME_APPROVED_AT = "approved_at";
  @SerializedName(SERIALIZED_NAME_APPROVED_AT)
  private OffsetDateTime approvedAt;

  public static final String SERIALIZED_NAME_ESCALATED_AT = "escalated_at";
  @SerializedName(SERIALIZED_NAME_ESCALATED_AT)
  private OffsetDateTime escalatedAt;

  public static final String SERIALIZED_NAME_MITIGATED_AT = "mitigated_at";
  @SerializedName(SERIALIZED_NAME_MITIGATED_AT)
  private OffsetDateTime mitigatedAt;

  public static final String SERIALIZED_NAME_IS_CURRENT_DEVICE = "is_current_device";
  @SerializedName(SERIALIZED_NAME_IS_CURRENT_DEVICE)
  private Boolean isCurrentDevice;

  public static final String SERIALIZED_NAME_CONTEXT = "context";
  @SerializedName(SERIALIZED_NAME_CONTEXT)
  private DeviceContext context;


   /**
   * Unique identifier for a user&#39;s device. This value may change over time and **should not** be used as a stable reference to the device
   * @return token
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "eyJhbGciOiJIUzI1NiJ9.eyJhIjoxfQ.CLqLzOmK8uYmIXNlhPXhrWCTQOT-XO2Vx8pB2Xqol4g", required = true, value = "Unique identifier for a user's device. This value may change over time and **should not** be used as a stable reference to the device")

  public String getToken() {
    return token;
  }




   /**
   * Get userId
   * @return userId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "262ad900-b126-44df-9564-689f30391c57", required = true, value = "")

  public String getUserId() {
    return userId;
  }




   /**
   * The time and date on which the device was created
   * @return createdAt
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "2012-12-02T00:30:08.276Z", required = true, value = "The time and date on which the device was created")

  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }




   /**
   * The time and date on which the device was last used
   * @return lastSeenAt
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "2012-12-02T00:30:08.276Z", required = true, value = "The time and date on which the device was last used")

  public OffsetDateTime getLastSeenAt() {
    return lastSeenAt;
  }




   /**
   * The time and date on which the device was approved
   * @return approvedAt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2012-12-02T00:30:08.276Z", required = true, value = "The time and date on which the device was approved")

  public OffsetDateTime getApprovedAt() {
    return approvedAt;
  }




   /**
   * The time and date on which the device was escalated
   * @return escalatedAt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2012-12-02T00:30:08.276Z", required = true, value = "The time and date on which the device was escalated")

  public OffsetDateTime getEscalatedAt() {
    return escalatedAt;
  }




   /**
   * Get mitigatedAt
   * @return mitigatedAt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "")

  public OffsetDateTime getMitigatedAt() {
    return mitigatedAt;
  }




   /**
   * Get isCurrentDevice
   * @return isCurrentDevice
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Boolean getIsCurrentDevice() {
    return isCurrentDevice;
  }




  public Device context(DeviceContext context) {
    
    this.context = context;
    return this;
  }

   /**
   * Get context
   * @return context
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public DeviceContext getContext() {
    return context;
  }


  public void setContext(DeviceContext context) {
    this.context = context;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Device device = (Device) o;
    return Objects.equals(this.token, device.token) &&
        Objects.equals(this.userId, device.userId) &&
        Objects.equals(this.createdAt, device.createdAt) &&
        Objects.equals(this.lastSeenAt, device.lastSeenAt) &&
        Objects.equals(this.approvedAt, device.approvedAt) &&
        Objects.equals(this.escalatedAt, device.escalatedAt) &&
        Objects.equals(this.mitigatedAt, device.mitigatedAt) &&
        Objects.equals(this.isCurrentDevice, device.isCurrentDevice) &&
        Objects.equals(this.context, device.context);
  }

  @Override
  public int hashCode() {
    return Objects.hash(token, userId, createdAt, lastSeenAt, approvedAt, escalatedAt, mitigatedAt, isCurrentDevice, context);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Device {\n");
    sb.append("    token: ").append(toIndentedString(token)).append("\n");
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    lastSeenAt: ").append(toIndentedString(lastSeenAt)).append("\n");
    sb.append("    approvedAt: ").append(toIndentedString(approvedAt)).append("\n");
    sb.append("    escalatedAt: ").append(toIndentedString(escalatedAt)).append("\n");
    sb.append("    mitigatedAt: ").append(toIndentedString(mitigatedAt)).append("\n");
    sb.append("    isCurrentDevice: ").append(toIndentedString(isCurrentDevice)).append("\n");
    sb.append("    context: ").append(toIndentedString(context)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

